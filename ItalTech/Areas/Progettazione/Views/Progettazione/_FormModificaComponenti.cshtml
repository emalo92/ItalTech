@using Infrastruttura.Models
@model List<Componente>
@{
    var indexRow = 0;
}
@*<partial name="_MessageResponse" />*@

<div class="riepilogoNomeText">Seleziona Componenti</div>
<button type="button" class="btn btn-primary btn-sm mb-2" title="Inserisce una riga vuota" id="btnCreateRiga" onclick="insertEmptyRow()"><i class="fa fa-plus"></i> Inserisci riga</button>

<div class="table-responsive-xl text-nowrap" style="overflow-x: auto; overflow-y: auto; max-height: 460px;">
    <table class="table" id="tableDettagli">
        <thead class="thead-light">
            <tr>
                <th>Codice</th>
                <th>Nome</th>
                <th>Descrizione</th>
                <th>Numero Pezzi</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="idBodyTableDettagli">
            @if (Model != null)
            {
                foreach (Componente elem in Model)
                {
                    <tr class="visible" id="rowTableDettaglioModelli_@indexRow" onclick="SelectRowDettaglio('@indexRow')">
                        <td>
                            <div class="input-group">
                                <input type="text" id="row_CodiceFornitura_@indexRow" class="form-control" name="Dettaglio[@indexRow].CodiceFornitura" value="@elem.CodiceFornitura" on onblur="getFornitura('@indexRow')">
                                <div id="divAllForniture" class="input-group-append">
                                    <button id="buttonViewAllForniture" title="Fornisce la lista delle forniture" type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" onclick="showDynamicViewAllForniture('/Progettazione/Progettazione/GetAllForniture')">
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                </div>
                            </div>
                        </td>
                        <td>
                            <input type="text" id="row_Nome_@indexRow" name="Dettaglio[@indexRow].Nome" value="@elem.Nome">
                        </td>
                        <td>
                            <input type="text" id="row_Descrizione_@indexRow" name="Dettaglio[@indexRow].Descrizione" value="@elem.Descrizione">
                        </td>
                        <td>
                            <input type="text" id="row_NumPezzi_@indexRow" name="Dettaglio[@indexRow].NumPezzi" value="@elem.NumPezzi">
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger btn-sm" title="Elimina la voce di un componente" onclick="deleteRow(this)"><i class="far fa-trash-alt"></i></button>
                        </td>
                        <td style="display: none"><input type="hidden" name="Dettaglio[@indexRow].CodiceProgetto" value="@elem.CodiceProgetto" />
                    </tr>
                    indexRow++;
                }
            }
            else
            {
                <tr class="visible" id="rowTableDettaglioModelli_@indexRow" onclick="SelectRowDettaglio('@indexRow')">
                    <td>
                        <div class="input-group">
                            <input type="text" id="row_CodiceFornitura_@indexRow" class="form-control" name="Dettaglio[@indexRow].CodiceFornitura" on onblur="getFornitura('@indexRow')">
                            <div id="divAllForniture" class="input-group-append">
                                <button id="buttonViewAllForniture" title="Fornisce la lista delle forniture" type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" onclick="showDynamicViewAllForniture('/Progettazione/Progettazione/GetAllFornitureModal')">
                                    <span class="sr-only">Toggle Dropdown</span>
                                </button>
                            </div>
                        </div>
                    </td>
                    <td>
                        <input type="text" id="row_Nome_@indexRow" name="Dettaglio[@indexRow].Nome">
                    </td>
                    <td>
                        <input type="text" id="row_Descrizione_@indexRow" name="Dettaglio[@indexRow].Descrizione">
                    </td>
                    <td>
                        <input type="text" id="row_NumPezzi_@indexRow" name="Dettaglio[@indexRow].NumPezzi">
                    </td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" title="Elimina la voce di un componente" onclick="deleteRow(this)"><i class="far fa-trash-alt"></i></button>
                    </td>
                    <td style="display: none"><input type="hidden" name="Dettaglio[@indexRow].CodiceProgetto"/>
                </tr>                
                indexRow++;
            }
        </tbody>
    </table>
</div>

<div id="Div_DynamicViewForniture" class="positionFixed setDarkBackground" style="display:none">
    <div class="finestraPopup">
        <div id="Div_DynamicView_ContainerForniture">

        </div>
    </div>
</div>

<script type="text/javascript">

    var selectedRowsIdDettaglio = 1;
    function SelectRowDettaglio(id) {
        selectedRowsIdDettaglio = id;
    }
    //callback definita nella view principale
    function showDynamicViewAllForniture(url) {
        checkOpenGenericTable = "Forniture";
        $("#Div_DynamicView_ContainerForniture").load(url);
        $("#Div_DynamicViewForniture").show();
        dispatchOpenPopupCustomEvent('ViewAllForniture');
        if (callbackGenericTable !== undefined) {
            document.removeEventListener('closedPopup_CustomEvent', callbackGenericTable(showDynamicViewAllForniture), false);
        }
    }

    function call_setContainerGenericTableForniture() {
        setContainerGenericTable('Div_DynamicViewForniture', 'Div_DynamicView_ContainerForniture', 'ViewAllForniture', callbackGetValueSelectedForniture);
    }
    function callbackGetValueSelectedForniture(selectedValues) {
        setSelectedValuesForniture(selectedValues);
    }
    function setSelectedValuesForniture(values) {
        if (values == null) {
            return false;
        }
        $("#row_CodiceFornitura_" + selectedRowsIdDettaglio).val(values.CodiceFornitura);
        $("#row_Nome_" + selectedRowsIdDettaglio).val(values.Nome);
        $("#row_Descrizione_" + selectedRowsIdDettaglio).val(values.Descrizione);
    }

    indexNewRow = @indexRow;
    function insertEmptyRow() {
        var table = document.getElementById("idBodyTableDettagli");
        var row = table.insertRow(-1);
        row.classList.add("visible");
        row.setAttribute("onclick", "SelectRowDettaglio(" + indexNewRow + ")");
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);
        var cell6 = row.insertCell(5);
        cell6.setAttribute("style", "display: none");

        cell1.innerHTML = '<div class="input-group">' +
                            '<input type="text" id="row_CodiceFornitura_' + indexNewRow + '" class="form-control" name="Dettaglio[' + indexNewRow + '].CodiceFornitura" on onblur="getFornitura(' + indexNewRow + ')">' +
                            '<div id="divAllForniture" class="input-group-append">' +
                                '<button id="buttonViewAllForniture" title="Fornisce la lista delle forniture" type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" onclick="showDynamicViewAllForniture(\'/Progettazione/Progettazione/GetAllFornitureModal\')">' +
                                    '<span class="sr-only">Toggle Dropdown</span>' +
                                '</button>' +
                            '</div>' +
                        '</div>';
        cell2.innerHTML = '<input type="text" id="row_Nome_' + indexNewRow + '" name="Dettaglio[' + indexNewRow + '].Nome">';
        cell3.innerHTML = '<input type="text" id="row_Descrizione_' + indexNewRow + '" name="Dettaglio[' + indexNewRow + '].Descrizione">';
        cell4.innerHTML = '<input type="text" id="row_NumPezzi_' + indexNewRow + '" name="Dettaglio[' + indexNewRow + '].NumPezzi">';
        cell5.innerHTML = '<button type="button" class="btn btn-danger btn-sm" title="Elimina la voce di un componente" onclick="deleteRow(this)"><i class="far fa-trash-alt"></i></button>';
        cell6.innerHTML = '<input type="hidden" name="Dettaglio[' + indexNewRow + '].CodiceProgetto" />';
        indexNewRow++;
    }

    function deleteRow(btn) {
        var row = btn.parentNode.parentNode;
        row.parentNode.removeChild(row);
    }

    function getFornitura(indexRow) {
        var codice = $("#row_CodiceFornitura_" + indexRow).val();
        if (codice == "") {
            return;
        }
        $.ajax({
            type: "GET",
            url: "/Progettazione/Progettazione/GetFornitura?codice=" + codice,
            contentType: "application/json",
            success: function (response) {
                if (!response.isSucces) {
                    if (response.message != null && response.message != undefined && response.message != '') {
                        myCustomModalAlertShow("Dati non validi", response.message);
                        $("#row_CodiceFornitura_" + selectedRowsIdDettaglio).val('');
                        $("#row_Nome_" + selectedRowsIdDettaglio).val('');
                        $("#row_Descrizione_" + selectedRowsIdDettaglio).val('');
                    }
                    else {
                        myCustomModalAlertShow("Dati non validi", response);
                    }
                }
                else {
                    $("#row_CodiceFornitura_" + selectedRowsIdDettaglio).val(response.result.codiceFornitura);
                    $("#row_Nome_" + selectedRowsIdDettaglio).val(response.result.nome);
                    $("#row_Descrizione_" + selectedRowsIdDettaglio).val(response.result.descrizione);
                }
            },
            error(jqXHR, textStatus) {
                myCustomModalAlertShow("Errore generico", textStatus);
            }
        });
    }
</script>